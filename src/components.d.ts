/* eslint-disable */
/* tslint:disable */
/**
 * This is an autogenerated file created by the Stencil compiler.
 * It contains typing information for all components that exist in this project.
 */


import { HTMLStencilElement, JSXBase } from '@stencil/core/internal';


export namespace Components {
  interface KButton {
    /**
    * The colour of button to display can be plain, primary or danger
    */
    'color': 'plain' | 'primary' | 'danger';
    /**
    * The button format to display can be basic, raised, outline or flat
    */
    'type': 'basic' | 'raised' | 'outline' | 'flat';
  }
  interface KGreeting {
    'name': string;
  }
  interface KRating {
    /**
    * The amount of stars
    */
    'maxValue': number;
    /**
    * The current rating of the stars
    */
    'value': number;
  }
}

declare global {


  interface HTMLKButtonElement extends Components.KButton, HTMLStencilElement {}
  var HTMLKButtonElement: {
    prototype: HTMLKButtonElement;
    new (): HTMLKButtonElement;
  };

  interface HTMLKGreetingElement extends Components.KGreeting, HTMLStencilElement {}
  var HTMLKGreetingElement: {
    prototype: HTMLKGreetingElement;
    new (): HTMLKGreetingElement;
  };

  interface HTMLKRatingElement extends Components.KRating, HTMLStencilElement {}
  var HTMLKRatingElement: {
    prototype: HTMLKRatingElement;
    new (): HTMLKRatingElement;
  };
  interface HTMLElementTagNameMap {
    'k-button': HTMLKButtonElement;
    'k-greeting': HTMLKGreetingElement;
    'k-rating': HTMLKRatingElement;
  }
}

declare namespace LocalJSX {
  interface KButton {
    /**
    * The colour of button to display can be plain, primary or danger
    */
    'color'?: 'plain' | 'primary' | 'danger';
    /**
    * The button format to display can be basic, raised, outline or flat
    */
    'type'?: 'basic' | 'raised' | 'outline' | 'flat';
  }
  interface KGreeting {
    'name'?: string;
  }
  interface KRating {
    /**
    * The amount of stars
    */
    'maxValue'?: number;
    /**
    * Event triggers whenever the amount of stars is changed
    */
    'onRatingUpdated'?: (event: CustomEvent<any>) => void;
    /**
    * The current rating of the stars
    */
    'value'?: number;
  }

  interface IntrinsicElements {
    'k-button': KButton;
    'k-greeting': KGreeting;
    'k-rating': KRating;
  }
}

export { LocalJSX as JSX };


declare module "@stencil/core" {
  export namespace JSX {
    interface IntrinsicElements {
      'k-button': LocalJSX.KButton & JSXBase.HTMLAttributes<HTMLKButtonElement>;
      'k-greeting': LocalJSX.KGreeting & JSXBase.HTMLAttributes<HTMLKGreetingElement>;
      'k-rating': LocalJSX.KRating & JSXBase.HTMLAttributes<HTMLKRatingElement>;
    }
  }
}


